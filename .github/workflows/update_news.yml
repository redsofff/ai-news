name: Update News

on:
  schedule:
    - cron: '10 * * * *'  # 每小时的第10分钟运行
  workflow_dispatch:  # 允许手动触发

jobs:
  update_news:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout the code
    - name: Checkout code
      uses: actions/checkout@v2

    # 2. Check current working directory
    - name: Check current directory  # 检查当前工作目录
      run: pwd

    # 3. Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'  # 设置 Python 版本

    # 4. Install dependencies
    - name: Install dependencies
      run: |
        pwd  # 输出当前目录，确保在正确的目录下
        ls -la  # 列出文件，确保 requirements.txt 存在
        pip install -r requirements.txt  # 安装依赖项

    # 5. Run the scraper
    - name: Run the scraper  # 运行爬虫脚本
      run: python3 scraper.py

    # 6. Prepare commit
    - name: Prepare commit
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@users.noreply.github.com"

        git status  # 查看更改状态
        git stash || echo "Nothing to stash"  # 处理未提交的更改，防止 pull 失败
        git pull --rebase origin main || echo "Pull failed, continuing..."  # 拉取最新代码，避免冲突
        git stash pop || echo "Nothing to pop"  # 恢复暂存区的更改

    # 7. Commit changes if any
    - name: Commit changes
      run: |
        if [ -f "news.json" ]; then  # 确保 news.json 存在再提交
          git add news.json  # 添加修改
          git commit -m "更新新闻数据" || echo "No changes to commit"  # 如果没有更改，跳过提交
        else
          echo "news.json 文件不存在，跳过提交"  # 如果没有生成文件，跳过提交
        fi

    # 8. Push changes to GitHub
    - name: Push changes
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}  # 获取 GitHub Secrets 中的 Token
      run: |
        git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/redsofff/ai-news.git  # 设置远程 URL，使用 PAT 进行身份验证
        git push origin main  # 将更改推送到 GitHub 仓库
